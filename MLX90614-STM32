#include "stm32f4xx.h"
#include "stm32f4xx_hal.h"

#define MLX90614_ADDR 0x5A << 1 // địa chỉ I2C của cảm biến MLX90614

I2C_HandleTypeDef hi2c1;

float read_temperature(void) {
  uint8_t data[3];
  float temp;

  // Gửi lệnh yêu cầu đọc nhiệt độ tới cảm biến
  HAL_I2C_Mem_Write(&hi2c1, MLX90614_ADDR, 0x07, I2C_MEMADD_SIZE_8BIT, NULL, 0, 100);

  // Đọc dữ liệu nhiệt độ từ cảm biến
  HAL_I2C_Mem_Read(&hi2c1, MLX90614_ADDR, 0x06, I2C_MEMADD_SIZE_8BIT, data, 3, 100);

  // Chuyển đổi giá trị nhiệt độ sang độ C
  temp = (float)((data[1] << 8) | data[0]);
  temp = (temp * 0.02) - 273.15;

  return temp;
}

int main(void) {
  HAL_Init();
  __HAL_RCC_GPIOA_CLK_ENABLE();
  __HAL_RCC_I2C1_CLK_ENABLE();

  GPIO_InitTypeDef GPIO_InitStruct;
  GPIO_InitStruct.Pin = GPIO_PIN_9 | GPIO_PIN_10;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
  GPIO_InitStruct.Pull = GPIO_PULLUP;
  GPIO_InitStruct.Speed = GPIO_SPEED_FAST;
  GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);

  hi2c1.Instance = I2C1;
  hi2c1.Init.ClockSpeed = 100000;
  hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
  hi2c1.Init.OwnAddress1 = 0;
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
  hi2c1.Init.OwnAddress2 = 0;
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
  HAL_I2C_Init(&hi2c1);

  while (1) {
    float temp = read_temperature();
    // làm gì đó với giá trị nhiệt độ
  }
}
